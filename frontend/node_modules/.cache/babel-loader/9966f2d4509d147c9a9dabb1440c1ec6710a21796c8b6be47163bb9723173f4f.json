{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import\"./App.css\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[getMessage,setGetMessage]=useState([[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1]]);const array1=[[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1]];const array2=[[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[1,1,1,1,1,1,1,1,-1,-1],[1,1,1,1,1,1,1,1,-1,-1],[1,1,1,1,1,1,1,1,-1,-1],[1,1,1,1,1,1,1,1,-1,-1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[-1,-1,1,1,1,1,1,1,1,1],[-1,-1,1,1,1,1,1,1,1,1],[-1,-1,1,1,1,1,1,1,1,1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]];const array3=[[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[1,1,1,1,1,1,1,1,-1,-1],[1,1,1,1,1,1,1,1,-1,-1],[1,1,1,1,1,1,1,1,-1,-1],[1,1,-1,-1,-1,-1,-1,-1,-1,-1],[1,1,-1,-1,-1,-1,-1,-1,-1,-1],[1,1,1,1,1,1,1,1,-1,-1],[1,1,1,1,1,1,1,1,-1,-1],[1,1,1,1,1,1,1,1,-1,-1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]];const array4=[[-1,-1,1,1,1,-1,-1,1,1,1],[-1,-1,1,1,1,-1,-1,1,1,1],[-1,-1,1,1,1,-1,-1,1,1,1],[-1,-1,1,1,1,-1,-1,1,1,1],[-1,-1,1,1,1,-1,-1,1,1,1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[1,1,1,1,1,-1,-1,1,1,1],[1,1,1,1,1,-1,-1,1,1,1],[1,1,1,1,1,-1,-1,1,1,1],[1,1,1,1,1,-1,-1,1,1,1]];// let rows = 10; create a button to make random patterns by select option corruption percentage!\n// let cols = 10;\n// let array = new Array(rows);\n// for (let i = 0; i < rows; i++) {\n//   array[i] = new Array(cols);\n//   for (let j = 0; j < cols; j++) {\n//     array[i][j] = Math.random() < 0.7 ? 1 : -1; // 70% chance of 1, 30% chance of -1\n//   }\n// }\n// console.log(array);\nconst[storedPattern,setStoredPattern]=useState(\"array1\");const[storedPatternValue,setStoredPatternValue]=useState([[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1]]);const[corruptionPercentage,setCorruptionPercentage]=useState(0);const[corruptionPatternValue,setCorruptionPatternValue]=useState([[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1]]);const[patternValueHolder,setPatternValueHolder]=useState([[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1]]);function randomizeArray(arr,percentage){let totalElements=arr.length*arr[0].length;let numChange=Math.round(totalElements*(percentage!==0?percentage/100:0));for(let i=0;i<numChange;i++){let row=Math.floor(Math.random()*arr.length);let col=Math.floor(Math.random()*arr[0].length);arr[row][col]*=-1;}return arr;}useEffect(()=>{let patternValues=document.querySelectorAll(\"p\");for(let i=0;i<patternValues.length;i++){if(patternValues[i].innerHTML===\"-1\"){patternValues[i].style.backgroundColor=\"black\";patternValues[i].style.color=\"black\";}else if(patternValues[i].innerHTML===\"1\"){patternValues[i].style.backgroundColor=\"white\";patternValues[i].style.color=\"white\";}}},[storedPatternValue,corruptionPatternValue]);// useEffect(() => {\n//   if (storedPattern === \"array1\") {\n//     setStoredPatternValue(array1);\n//     setPatternValueHolder(array1);\n//   } else if (storedPattern === \"array2\") {\n//     setStoredPatternValue(array2);\n//     setPatternValueHolder(array2);\n//   } else if (storedPattern === \"array3\") {\n//     setStoredPatternValue(array3);\n//     setPatternValueHolder(array3);\n//   } else if (storedPattern === \"array4\") {\n//     setStoredPatternValue(array4);\n//     setPatternValueHolder(array4);\n//   } else {\n//     setStoredPatternValue(array1);\n//     setPatternValueHolder(array1);\n//   }\n//   setCorruptionPatternValue(() =>\n//     randomizeArray(patternValueHolder, corruptionPercentage)\n//   );\n//   axios.post(\"http://localhost:5000/flask/hello\", {\n//     message: JSON.stringify(corruptionPatternValue),\n//   })\n// }, [storedPattern, corruptionPercentage]);\nuseEffect(()=>{let currentPatternValue;if(storedPattern===\"array1\"){currentPatternValue=array1;}else if(storedPattern===\"array2\"){currentPatternValue=array2;}else if(storedPattern===\"array3\"){currentPatternValue=array3;}else if(storedPattern===\"array4\"){currentPatternValue=array4;}else{currentPatternValue=array1;}setStoredPatternValue(currentPatternValue);setPatternValueHolder(currentPatternValue);const corruptedPatternValue=randomizeArray(currentPatternValue,corruptionPercentage);setCorruptionPatternValue(corruptedPatternValue);// axios.post(\"http://localhost:5000/flask/hello\", {\n//   message: JSON.stringify(corruptedPatternValue),\n// });\naxios.post(\"https://hopfield-uok.iran.liara.run//flask/hello\",{message:JSON.stringify(corruptedPatternValue)});},[storedPattern,corruptionPercentage]);useEffect(()=>{if(storedPattern===\"array1\"){setCorruptionPatternValue(array1);}else if(storedPattern===\"array2\"){setCorruptionPatternValue(array2);}else if(storedPattern===\"array3\"){setCorruptionPatternValue(array3);}else if(storedPattern===\"array4\"){setCorruptionPatternValue(array4);}else{setCorruptionPatternValue(array1);}setCorruptionPercentage(0);},[storedPattern]);useEffect(()=>{axios.get(\"https://hopfield-uok.iran.liara.run/flask/hello\").then(response=>{let string=response.data.message.split(\" \").map(Number);let matrix=[];for(let i=0;i<10;i++){matrix[i]=string.slice(i*10,i*10+10);}// console.log(matrix);\nsetGetMessage(matrix);}).catch(error=>{// console.log(error);\n});axios.post(\"https://hopfield-uok.iran.liara.run/flask/hello\",{message:JSON.stringify(corruptionPatternValue)})// .then(response => console.log(response.data, 'here I am'))\n.catch(error=>console.error(error));},[]);const printHandler=()=>{// console.log(getMessage, 'wow')\n// console.log(corruptionPatternValue, corruptionPercentage);\nsetCorruptionPatternValue(getMessage);axios.post(\"https://hopfield-uok.iran.liara.run/flask/hello\",{message:JSON.stringify(corruptionPatternValue)}).then(response=>{console.log(response.data,'here I am');let string=response.data.message.split(\" \").map(Number);let matrix=[];for(let i=0;i<10;i++){matrix[i]=string.slice(i*10,i*10+10);}console.log(matrix);setCorruptionPatternValue(matrix);setGetMessage(matrix);}).catch(error=>console.error(error));// axios.get('http://localhost:5000/flask/hello').then(response => {\n//   console.log(\"SUCCESS\", response.data.message)\n//   setGetMessage(response)\n// }).catch(error => {\n//   console.log(error)\n// })\naxios.get(\"https://hopfield-uok.iran.liara.run/flask/hello\").then(response=>{console.log(response.data);// let string = response.data.message.split(\" \").map(Number);\n// let matrix = [];\n// for (let i = 0; i < 10; i++) {\n//   matrix[i] = string.slice(i * 10, i * 10 + 10);\n// }\n// console.log(matrix);\n// setGetMessage(matrix);\n}).catch(error=>{// console.log(error);\n});};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsx(\"h1\",{children:\"Hopfield Networks\"})}),/*#__PURE__*/_jsxs(\"main\",{className:\"window\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"parametersContainer\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Parameters\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Stored patterns\"}),/*#__PURE__*/_jsxs(\"select\",{onChange:e=>setStoredPattern(e.target.value),value:storedPattern,children:[/*#__PURE__*/_jsx(\"option\",{value:\"array1\",children:\"1\"}),/*#__PURE__*/_jsx(\"option\",{value:\"array2\",children:\"2\"}),/*#__PURE__*/_jsx(\"option\",{value:\"array3\",children:\"3\"}),/*#__PURE__*/_jsx(\"option\",{value:\"array4\",children:\"4\"})]})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Corruption %\"}),/*#__PURE__*/_jsxs(\"select\",{onChange:e=>setCorruptionPercentage(Number(e.target.value)),value:corruptionPercentage,children:[/*#__PURE__*/_jsx(\"option\",{value:\"0\",children:\"0\"}),/*#__PURE__*/_jsx(\"option\",{value:\"10\",children:\"10\"}),/*#__PURE__*/_jsx(\"option\",{value:\"20\",children:\"20\"}),/*#__PURE__*/_jsx(\"option\",{value:\"30\",children:\"30\"}),/*#__PURE__*/_jsx(\"option\",{value:\"40\",children:\"40\"}),/*#__PURE__*/_jsx(\"option\",{value:\"50\",children:\"50\"}),/*#__PURE__*/_jsx(\"option\",{value:\"60\",children:\"60\"}),/*#__PURE__*/_jsx(\"option\",{value:\"70\",children:\"70\"}),/*#__PURE__*/_jsx(\"option\",{value:\"80\",children:\"80\"}),/*#__PURE__*/_jsx(\"option\",{value:\"90\",children:\"90\"}),/*#__PURE__*/_jsx(\"option\",{value:\"100\",children:\"100\"})]})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Iteration delay\"}),/*#__PURE__*/_jsx(\"select\",{children:/*#__PURE__*/_jsx(\"option\",{children:\"25\"})})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"patternsContainer\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Stored pattern(s)\"}),/*#__PURE__*/_jsx(\"div\",{className:\"storedPatternsContainer\",children:storedPatternValue.map((row,i)=>/*#__PURE__*/_jsx(\"div\",{className:\"patternArray\",children:row.map((item,j)=>/*#__PURE__*/_jsx(\"p\",{children:item},j))},i))}),/*#__PURE__*/_jsx(\"button\",{onClick:printHandler,children:\"print\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"corruptedPatternContainer\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Corrupted pattern\"}),/*#__PURE__*/_jsx(\"div\",{className:\"storedPatternsContainer\",children:corruptionPatternValue.map((row,i)=>/*#__PURE__*/_jsx(\"div\",{className:\"patternArray\",children:row.map((item,j)=>/*#__PURE__*/_jsx(\"p\",{children:item},j))},i))})]})]})]});}export default App;{/* <div>{getMessage.status === 200 ? <h3>{getMessage.data.message}</h3>:<h3>Loading</h3>}</div> */}","map":{"version":3,"names":["React","useEffect","useState","axios","jsx","_jsx","jsxs","_jsxs","App","getMessage","setGetMessage","array1","array2","array3","array4","storedPattern","setStoredPattern","storedPatternValue","setStoredPatternValue","corruptionPercentage","setCorruptionPercentage","corruptionPatternValue","setCorruptionPatternValue","patternValueHolder","setPatternValueHolder","randomizeArray","arr","percentage","totalElements","length","numChange","Math","round","i","row","floor","random","col","patternValues","document","querySelectorAll","innerHTML","style","backgroundColor","color","currentPatternValue","corruptedPatternValue","post","message","JSON","stringify","get","then","response","string","data","split","map","Number","matrix","slice","catch","error","console","printHandler","log","className","children","onChange","e","target","value","item","j","onClick"],"sources":["E:/Projects/Hopfield - Copy/hopfield-front/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nfunction App() {\n  const [getMessage, setGetMessage] = useState([\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n  ]);\n  const array1 = [\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n  ];\n  const array2 = [\n    [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1],\n    [1, 1, 1, 1, 1, 1, 1, 1, -1, -1],\n    [1, 1, 1, 1, 1, 1, 1, 1, -1, -1],\n    [1, 1, 1, 1, 1, 1, 1, 1, -1, -1],\n    [1, 1, 1, 1, 1, 1, 1, 1, -1, -1],\n    [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1],\n    [-1, -1, 1, 1, 1, 1, 1, 1, 1, 1],\n    [-1, -1, 1, 1, 1, 1, 1, 1, 1, 1],\n    [-1, -1, 1, 1, 1, 1, 1, 1, 1, 1],\n    [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1],\n  ];\n  const array3 = [\n    [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1],\n    [1, 1, 1, 1, 1, 1, 1, 1, -1, -1],\n    [1, 1, 1, 1, 1, 1, 1, 1, -1, -1],\n    [1, 1, 1, 1, 1, 1, 1, 1, -1, -1],\n    [1, 1, -1, -1, -1, -1, -1, -1, -1, -1],\n    [1, 1, -1, -1, -1, -1, -1, -1, -1, -1],\n    [1, 1, 1, 1, 1, 1, 1, 1, -1, -1],\n    [1, 1, 1, 1, 1, 1, 1, 1, -1, -1],\n    [1, 1, 1, 1, 1, 1, 1, 1, -1, -1],\n    [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1],\n  ];\n  const array4 = [\n    [-1, -1, 1, 1, 1, -1, -1, 1, 1, 1],\n    [-1, -1, 1, 1, 1, -1, -1, 1, 1, 1],\n    [-1, -1, 1, 1, 1, -1, -1, 1, 1, 1],\n    [-1, -1, 1, 1, 1, -1, -1, 1, 1, 1],\n    [-1, -1, 1, 1, 1, -1, -1, 1, 1, 1],\n    [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1],\n    [1, 1, 1, 1, 1, -1, -1, 1, 1, 1],\n    [1, 1, 1, 1, 1, -1, -1, 1, 1, 1],\n    [1, 1, 1, 1, 1, -1, -1, 1, 1, 1],\n    [1, 1, 1, 1, 1, -1, -1, 1, 1, 1],\n  ];\n  // let rows = 10; create a button to make random patterns by select option corruption percentage!\n  // let cols = 10;\n  // let array = new Array(rows);\n\n  // for (let i = 0; i < rows; i++) {\n  //   array[i] = new Array(cols);\n  //   for (let j = 0; j < cols; j++) {\n  //     array[i][j] = Math.random() < 0.7 ? 1 : -1; // 70% chance of 1, 30% chance of -1\n  //   }\n  // }\n\n  // console.log(array);\n  const [storedPattern, setStoredPattern] = useState(\"array1\");\n  const [storedPatternValue, setStoredPatternValue] = useState([\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n  ]);\n  const [corruptionPercentage, setCorruptionPercentage] = useState(0);\n  const [corruptionPatternValue, setCorruptionPatternValue] = useState([\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n  ]);\n  const [patternValueHolder, setPatternValueHolder] = useState([\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n  ]);\n  function randomizeArray(arr, percentage) {\n    let totalElements = arr.length * arr[0].length;\n    let numChange = Math.round(\n      totalElements * (percentage !== 0 ? percentage / 100 : 0)\n    );\n\n    for (let i = 0; i < numChange; i++) {\n      let row = Math.floor(Math.random() * arr.length);\n      let col = Math.floor(Math.random() * arr[0].length);\n      arr[row][col] *= -1;\n    }\n\n    return arr;\n  }\n\n  useEffect(() => {\n    let patternValues = document.querySelectorAll(\"p\");\n    for (let i = 0; i < patternValues.length; i++) {\n      if (patternValues[i].innerHTML === \"-1\") {\n        patternValues[i].style.backgroundColor = \"black\";\n        patternValues[i].style.color = \"black\";\n      } else if (patternValues[i].innerHTML === \"1\") {\n        patternValues[i].style.backgroundColor = \"white\";\n        patternValues[i].style.color = \"white\";\n      }\n    }\n  }, [storedPatternValue, corruptionPatternValue]);\n  // useEffect(() => {\n  //   if (storedPattern === \"array1\") {\n  //     setStoredPatternValue(array1);\n  //     setPatternValueHolder(array1);\n  //   } else if (storedPattern === \"array2\") {\n  //     setStoredPatternValue(array2);\n  //     setPatternValueHolder(array2);\n  //   } else if (storedPattern === \"array3\") {\n  //     setStoredPatternValue(array3);\n  //     setPatternValueHolder(array3);\n  //   } else if (storedPattern === \"array4\") {\n  //     setStoredPatternValue(array4);\n  //     setPatternValueHolder(array4);\n  //   } else {\n  //     setStoredPatternValue(array1);\n  //     setPatternValueHolder(array1);\n  //   }\n\n  //   setCorruptionPatternValue(() =>\n  //     randomizeArray(patternValueHolder, corruptionPercentage)\n  //   );\n  //   axios.post(\"http://localhost:5000/flask/hello\", {\n  //     message: JSON.stringify(corruptionPatternValue),\n  //   })\n  // }, [storedPattern, corruptionPercentage]);\n  useEffect(() => {\n    let currentPatternValue;\n    if (storedPattern === \"array1\") {\n      currentPatternValue = array1;\n    } else if (storedPattern === \"array2\") {\n      currentPatternValue = array2;\n    } else if (storedPattern === \"array3\") {\n      currentPatternValue = array3;\n    } else if (storedPattern === \"array4\") {\n      currentPatternValue = array4;\n    } else {\n      currentPatternValue = array1;\n    }\n    setStoredPatternValue(currentPatternValue);\n    setPatternValueHolder(currentPatternValue);\n\n    const corruptedPatternValue = randomizeArray(currentPatternValue, corruptionPercentage);\n    setCorruptionPatternValue(corruptedPatternValue);\n\n    // axios.post(\"http://localhost:5000/flask/hello\", {\n    //   message: JSON.stringify(corruptedPatternValue),\n    // });\n    axios.post(\"https://hopfield-uok.iran.liara.run//flask/hello\", {\n      message: JSON.stringify(corruptedPatternValue),\n    });\n  }, [storedPattern, corruptionPercentage]);\n  useEffect(() => {\n    if (storedPattern === \"array1\") {\n      setCorruptionPatternValue(array1);\n    } else if (storedPattern === \"array2\") {\n      setCorruptionPatternValue(array2);\n    } else if (storedPattern === \"array3\") {\n      setCorruptionPatternValue(array3);\n    } else if (storedPattern === \"array4\") {\n      setCorruptionPatternValue(array4);\n    } else {\n      setCorruptionPatternValue(array1);\n    }\n    setCorruptionPercentage(0);\n  }, [storedPattern]);\n\n  useEffect(() => {\n    axios\n      .get(\"https://hopfield-uok.iran.liara.run/flask/hello\")\n      .then((response) => {\n        let string = response.data.message.split(\" \").map(Number);\n        let matrix = [];\n        for (let i = 0; i < 10; i++) {\n          matrix[i] = string.slice(i * 10, i * 10 + 10);\n        }\n        // console.log(matrix);\n        setGetMessage(matrix);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n      \n      axios\n      .post(\"https://hopfield-uok.iran.liara.run/flask/hello\", {\n        message: JSON.stringify(corruptionPatternValue),\n      })\n      // .then(response => console.log(response.data, 'here I am'))\n      .catch((error) => console.error(error));\n  }, []);\n  const printHandler = () => {\n    // console.log(getMessage, 'wow')\n    // console.log(corruptionPatternValue, corruptionPercentage);\n    setCorruptionPatternValue(getMessage);\n    \n    axios\n      .post(\"https://hopfield-uok.iran.liara.run/flask/hello\", {\n        message: JSON.stringify(corruptionPatternValue),\n      })\n      .then(response => {\n        console.log(response.data, 'here I am')\n      let string = response.data.message.split(\" \").map(Number);\n        let matrix = [];\n        for (let i = 0; i < 10; i++) {\n          matrix[i] = string.slice(i * 10, i * 10 + 10);\n        }\n        console.log(matrix);\n        setCorruptionPatternValue(matrix)\n        setGetMessage(matrix);\n    })\n      .catch((error) => console.error(error));\n\n\n\n\n\n      // axios.get('http://localhost:5000/flask/hello').then(response => {\n      //   console.log(\"SUCCESS\", response.data.message)\n      //   setGetMessage(response)\n      // }).catch(error => {\n      //   console.log(error)\n      // })\n\n\n\n      axios\n      .get(\"https://hopfield-uok.iran.liara.run/flask/hello\")\n      .then((response) => {\n        console.log(response.data);\n        // let string = response.data.message.split(\" \").map(Number);\n        // let matrix = [];\n        // for (let i = 0; i < 10; i++) {\n        //   matrix[i] = string.slice(i * 10, i * 10 + 10);\n        // }\n        // console.log(matrix);\n        // setGetMessage(matrix);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Hopfield Networks</h1>\n      </header>\n      <main className=\"window\">\n        <div className=\"parametersContainer\">\n          <h1>Parameters</h1>\n          <div>\n            <div>\n              <label>Stored patterns</label>\n              <select\n                onChange={(e) => setStoredPattern(e.target.value)}\n                value={storedPattern}\n              >\n                <option value=\"array1\">1</option>\n                <option value=\"array2\">2</option>\n                <option value=\"array3\">3</option>\n                <option value=\"array4\">4</option>\n              </select>\n            </div>\n          </div>\n          <div>\n            <div>\n              <label>Corruption %</label>\n              <select\n                onChange={(e) =>\n                  setCorruptionPercentage(Number(e.target.value))\n                }\n                value={corruptionPercentage}\n              >\n                <option value={\"0\"}>0</option>\n                <option value={\"10\"}>10</option>\n                <option value={\"20\"}>20</option>\n                <option value={\"30\"}>30</option>\n                <option value={\"40\"}>40</option>\n                <option value={\"50\"}>50</option>\n                <option value={\"60\"}>60</option>\n                <option value={\"70\"}>70</option>\n                <option value={\"80\"}>80</option>\n                <option value={\"90\"}>90</option>\n                <option value={\"100\"}>100</option>\n              </select>\n            </div>\n          </div>\n          <div>\n            <div>\n              <label>Iteration delay</label>\n              <select>\n                <option>25</option>\n              </select>\n            </div>\n          </div>\n        </div>\n        <div className=\"patternsContainer\">\n          <h1>Stored pattern(s)</h1>\n          <div className=\"storedPatternsContainer\">\n            {storedPatternValue.map((row, i) => (\n              <div className=\"patternArray\" key={i}>\n                {row.map((item, j) => (\n                  <p key={j}>{item}</p>\n                ))}\n              </div>\n            ))}\n          </div>\n          <button onClick={printHandler}>print</button>\n        </div>\n        <div className=\"corruptedPatternContainer\">\n          <h1>Corrupted pattern</h1>\n          <div className=\"storedPatternsContainer\">\n            {corruptionPatternValue.map((row, i) => (\n              <div className=\"patternArray\" key={i}>\n                {row.map((item, j) => (\n                  <p key={j}>{item}</p>\n                ))}\n              </div>\n            ))}\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n{\n  /* <div>{getMessage.status === 200 ? <h3>{getMessage.data.message}</h3>:<h3>Loading</h3>}</div> */\n}\n"],"mappings":"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AC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAChC,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAChC,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAChC,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAChC,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAChC,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAChC,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAChC,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAChC,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAChC,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACjC,CAAC,CA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}