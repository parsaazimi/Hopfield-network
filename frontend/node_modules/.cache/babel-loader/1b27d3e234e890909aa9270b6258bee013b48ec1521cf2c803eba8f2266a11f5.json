{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import\"./App.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const array1=[[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1]];const array2=[[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[1,1,1,1,1,1,1,1,-1,-1],[1,1,1,1,1,1,1,1,-1,-1],[1,1,1,1,1,1,1,1,-1,-1],[1,1,1,1,1,1,1,1,-1,-1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[-1,-1,1,1,1,1,1,1,1,1],[-1,-1,1,1,1,1,1,1,1,1],[-1,-1,1,1,1,1,1,1,1,1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]];const array3=[[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[1,1,1,1,1,1,1,1,-1,-1],[1,1,1,1,1,1,1,1,-1,-1],[1,1,1,1,1,1,1,1,-1,-1],[1,1,-1,-1,-1,-1,-1,-1,-1,-1],[1,1,-1,-1,-1,-1,-1,-1,-1,-1],[1,1,1,1,1,1,1,1,-1,-1],[1,1,1,1,1,1,1,1,-1,-1],[1,1,1,1,1,1,1,1,-1,-1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]];const array4=[[-1,-1,1,1,1,-1,-1,1,1,1],[-1,-1,1,1,1,-1,-1,1,1,1],[-1,-1,1,1,1,-1,-1,1,1,1],[-1,-1,1,1,1,-1,-1,1,1,1],[-1,-1,1,1,1,-1,-1,1,1,1],[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[1,1,1,1,1,-1,-1,1,1,1],[1,1,1,1,1,-1,-1,1,1,1],[1,1,1,1,1,-1,-1,1,1,1],[1,1,1,1,1,-1,-1,1,1,1]];// let rows = 10; create a button to make random patterns by select option corruption percentage!\n// let cols = 10;\n// let array = new Array(rows);\n// for (let i = 0; i < rows; i++) {\n//   array[i] = new Array(cols);\n//   for (let j = 0; j < cols; j++) {\n//     array[i][j] = Math.random() < 0.7 ? 1 : -1; // 70% chance of 1, 30% chance of -1\n//   }\n// }\n// console.log(array);\nconst[storedPattern,setStoredPattern]=useState(\"array1\");const[storedPatternValue,setStoredPatternValue]=useState([[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1]]);const[corruptionPercentage,setCorruptionPercentage]=useState(0);const[corruptionPatternValue,setCorruptionPatternValue]=useState([[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1]]);const[patternValueHolder,setPatternValueHolder]=useState([[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1],[1,1,1,1,-1,-1,1,1,1,1]]);function randomizeArray(arr,percentage){let totalElements=arr.length*arr[0].length;let numChange=Math.round(totalElements*(percentage!==0?percentage/100:0));// if(numChange == 0){\n//   numChange = 0\n// }else if( numChange > 0 && numChange < 20){\n//   numChange = 10\n// }else if( numChange >= 20 && numChange < 30){\n//   numChange = 20\n// }else if( numChange >= 30 && numChange < 40){\n//   numChange = 30\n// }else if( numChange >= 40 && numChange < 50){\n//   numChange = 40\n// }else if( numChange >= 50 && numChange < 60){\n//   numChange = 50\n// }else if( numChange >= 60 && numChange < 70){\n//   numChange = 60\n// }else if( numChange >= 70 && numChange < 80){\n//   numChange = 70\n// }else if( numChange >= 80 && numChange < 90){\n//   numChange = 80\n// }else if( numChange >= 90 && numChange < 100){\n//   numChange = 90\n// }else if( numChange >= 100){\n//   numChange = 100\n// }\nfor(let i=0;i<numChange;i++){let row=Math.floor(Math.random()*arr.length);let col=Math.floor(Math.random()*arr[0].length);arr[row][col]*=-1;}return arr;}// const corruptionHandler = (e) => {\n//   setCorruptionPercentage(Number(e.target.value));\n//   // setCorruptionPatternValue(prevArray => randomizeArray(prevArray, corruptionPercentage));\n//   console.log(corruptionPatternValue);\n// };\nuseEffect(()=>{let patternValues=document.querySelectorAll(\"p\");for(let i=0;i<patternValues.length;i++){if(patternValues[i].innerHTML===\"-1\"){patternValues[i].style.backgroundColor=\"black\";patternValues[i].style.color=\"black\";}else if(patternValues[i].innerHTML===\"1\"){patternValues[i].style.backgroundColor=\"white\";patternValues[i].style.color=\"white\";}}},[storedPatternValue,corruptionPatternValue]);useEffect(()=>{if(storedPattern===\"array1\"){setStoredPatternValue(array1);setPatternValueHolder(array1);}else if(storedPattern===\"array2\"){setStoredPatternValue(array2);setPatternValueHolder(array2);}else if(storedPattern===\"array3\"){setStoredPatternValue(array3);setPatternValueHolder(array3);}else if(storedPattern===\"array4\"){setStoredPatternValue(array4);setPatternValueHolder(array4);}else{setStoredPatternValue(array1);setPatternValueHolder(array1);}setCorruptionPatternValue(()=>randomizeArray(patternValueHolder,corruptionPercentage));console.log(patternValueHolder);},[storedPattern,corruptionPercentage]);useEffect(()=>{if(storedPattern===\"array1\"){setCorruptionPatternValue(array1);}else if(storedPattern===\"array2\"){setCorruptionPatternValue(array2);}else if(storedPattern===\"array3\"){setCorruptionPatternValue(array3);}else if(storedPattern===\"array4\"){setCorruptionPatternValue(array4);}else{setCorruptionPatternValue(array1);}setCorruptionPercentage(0);},[storedPattern]);// useEffect(()=>{\n// setCorruptionPatternValue(() => randomizeArray(patternValueHolder, corruptionPercentage));\n// console.log(corruptionPercentage);\n// }, [corruptionPercentage])\nconst printHandler=()=>{console.log(storedPatternValue);console.log(corruptionPercentage);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsx(\"h1\",{children:\"Hopfield Networks\"})}),/*#__PURE__*/_jsxs(\"main\",{className:\"window\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"parametersContainer\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Parameters\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Stored patterns\"}),/*#__PURE__*/_jsxs(\"select\",{onChange:e=>setStoredPattern(e.target.value),value:storedPattern,children:[/*#__PURE__*/_jsx(\"option\",{value:\"array1\",children:\"1\"}),/*#__PURE__*/_jsx(\"option\",{value:\"array2\",children:\"2\"}),/*#__PURE__*/_jsx(\"option\",{value:\"array3\",children:\"3\"}),/*#__PURE__*/_jsx(\"option\",{value:\"array4\",children:\"4\"})]})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Corruption %\"}),/*#__PURE__*/_jsxs(\"select\",{onChange:e=>setCorruptionPercentage(Number(e.target.value)),value:corruptionPercentage,children:[/*#__PURE__*/_jsx(\"option\",{value:\"0\",children:\"0\"}),/*#__PURE__*/_jsx(\"option\",{value:\"10\",children:\"10\"}),/*#__PURE__*/_jsx(\"option\",{value:\"20\",children:\"20\"}),/*#__PURE__*/_jsx(\"option\",{value:\"30\",children:\"30\"}),/*#__PURE__*/_jsx(\"option\",{value:\"40\",children:\"40\"}),/*#__PURE__*/_jsx(\"option\",{value:\"50\",children:\"50\"}),/*#__PURE__*/_jsx(\"option\",{value:\"60\",children:\"60\"}),/*#__PURE__*/_jsx(\"option\",{value:\"70\",children:\"70\"}),/*#__PURE__*/_jsx(\"option\",{value:\"80\",children:\"80\"}),/*#__PURE__*/_jsx(\"option\",{value:\"90\",children:\"90\"}),/*#__PURE__*/_jsx(\"option\",{value:\"100\",children:\"100\"})]})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Iteration delay\"}),/*#__PURE__*/_jsx(\"select\",{children:/*#__PURE__*/_jsx(\"option\",{children:\"25\"})})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"patternsContainer\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Stored pattern(s)\"}),/*#__PURE__*/_jsx(\"div\",{className:\"storedPatternsContainer\",children:storedPatternValue.map((row,i)=>/*#__PURE__*/_jsx(\"div\",{className:\"patternArray\",children:row.map((item,j)=>/*#__PURE__*/_jsx(\"p\",{children:item},j))},i))}),/*#__PURE__*/_jsx(\"button\",{onClick:printHandler,children:\"print\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"corruptedPatternContainer\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Corrupted pattern\"}),/*#__PURE__*/_jsx(\"div\",{className:\"storedPatternsContainer\",children:corruptionPatternValue.map((row,i)=>/*#__PURE__*/_jsx(\"div\",{className:\"patternArray\",children:row.map((item,j)=>/*#__PURE__*/_jsx(\"p\",{children:item},j))},i))})]})]})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","App","array1","array2","array3","array4","storedPattern","setStoredPattern","storedPatternValue","setStoredPatternValue","corruptionPercentage","setCorruptionPercentage","corruptionPatternValue","setCorruptionPatternValue","patternValueHolder","setPatternValueHolder","randomizeArray","arr","percentage","totalElements","length","numChange","Math","round","i","row","floor","random","col","patternValues","document","querySelectorAll","innerHTML","style","backgroundColor","color","console","log","printHandler","className","children","onChange","e","target","value","Number","map","item","j","onClick"],"sources":["E:/Projects/Hopfield/hopfield-front/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nfunction App() {\n  const array1 = [\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n  ];\n  const array2 = [\n    [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1],\n    [1, 1, 1, 1, 1, 1, 1, 1, -1, -1],\n    [1, 1, 1, 1, 1, 1, 1, 1, -1, -1],\n    [1, 1, 1, 1, 1, 1, 1, 1, -1, -1],\n    [1, 1, 1, 1, 1, 1, 1, 1, -1, -1],\n    [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1],\n    [-1, -1, 1, 1, 1, 1, 1, 1, 1, 1],\n    [-1, -1, 1, 1, 1, 1, 1, 1, 1, 1],\n    [-1, -1, 1, 1, 1, 1, 1, 1, 1, 1],\n    [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1],\n  ];\n  const array3 = [\n    [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1],\n    [1, 1, 1, 1, 1, 1, 1, 1, -1, -1],\n    [1, 1, 1, 1, 1, 1, 1, 1, -1, -1],\n    [1, 1, 1, 1, 1, 1, 1, 1, -1, -1],\n    [1, 1, -1, -1, -1, -1, -1, -1, -1, -1],\n    [1, 1, -1, -1, -1, -1, -1, -1, -1, -1],\n    [1, 1, 1, 1, 1, 1, 1, 1, -1, -1],\n    [1, 1, 1, 1, 1, 1, 1, 1, -1, -1],\n    [1, 1, 1, 1, 1, 1, 1, 1, -1, -1],\n    [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1],\n  ];\n  const array4 = [\n    [-1, -1, 1, 1, 1, -1, -1, 1, 1, 1],\n    [-1, -1, 1, 1, 1, -1, -1, 1, 1, 1],\n    [-1, -1, 1, 1, 1, -1, -1, 1, 1, 1],\n    [-1, -1, 1, 1, 1, -1, -1, 1, 1, 1],\n    [-1, -1, 1, 1, 1, -1, -1, 1, 1, 1],\n    [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1],\n    [1, 1, 1, 1, 1, -1, -1, 1, 1, 1],\n    [1, 1, 1, 1, 1, -1, -1, 1, 1, 1],\n    [1, 1, 1, 1, 1, -1, -1, 1, 1, 1],\n    [1, 1, 1, 1, 1, -1, -1, 1, 1, 1],\n  ];\n  // let rows = 10; create a button to make random patterns by select option corruption percentage!\n  // let cols = 10;\n  // let array = new Array(rows);\n\n  // for (let i = 0; i < rows; i++) {\n  //   array[i] = new Array(cols);\n  //   for (let j = 0; j < cols; j++) {\n  //     array[i][j] = Math.random() < 0.7 ? 1 : -1; // 70% chance of 1, 30% chance of -1\n  //   }\n  // }\n\n  // console.log(array);\n  const [storedPattern, setStoredPattern] = useState(\"array1\");\n  const [storedPatternValue, setStoredPatternValue] = useState([\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n  ]);\n  const [corruptionPercentage, setCorruptionPercentage] = useState(0);\n  const [corruptionPatternValue, setCorruptionPatternValue] = useState([\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n  ]);\n  const [patternValueHolder, setPatternValueHolder] = useState([\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n    [1, 1, 1, 1, -1, -1, 1, 1, 1, 1],\n  ]);\n  function randomizeArray(arr, percentage) {\n    let totalElements = arr.length * arr[0].length;\n    let numChange = Math.round(\n      totalElements * (percentage !== 0 ? percentage / 100 : 0)\n    );\n    // if(numChange == 0){\n    //   numChange = 0\n    // }else if( numChange > 0 && numChange < 20){\n    //   numChange = 10\n    // }else if( numChange >= 20 && numChange < 30){\n    //   numChange = 20\n    // }else if( numChange >= 30 && numChange < 40){\n    //   numChange = 30\n    // }else if( numChange >= 40 && numChange < 50){\n    //   numChange = 40\n    // }else if( numChange >= 50 && numChange < 60){\n    //   numChange = 50\n    // }else if( numChange >= 60 && numChange < 70){\n    //   numChange = 60\n    // }else if( numChange >= 70 && numChange < 80){\n    //   numChange = 70\n    // }else if( numChange >= 80 && numChange < 90){\n    //   numChange = 80\n    // }else if( numChange >= 90 && numChange < 100){\n    //   numChange = 90\n    // }else if( numChange >= 100){\n    //   numChange = 100\n    // }\n    for (let i = 0; i < numChange; i++) {\n      let row = Math.floor(Math.random() * arr.length);\n      let col = Math.floor(Math.random() * arr[0].length);\n      arr[row][col] *= -1;\n    }\n\n    return arr;\n  }\n  // const corruptionHandler = (e) => {\n  //   setCorruptionPercentage(Number(e.target.value));\n  //   // setCorruptionPatternValue(prevArray => randomizeArray(prevArray, corruptionPercentage));\n  //   console.log(corruptionPatternValue);\n  // };\n\n  useEffect(() => {\n    let patternValues = document.querySelectorAll(\"p\");\n    for (let i = 0; i < patternValues.length; i++) {\n      if (patternValues[i].innerHTML === \"-1\") {\n        patternValues[i].style.backgroundColor = \"black\";\n        patternValues[i].style.color = \"black\";\n      } else if (patternValues[i].innerHTML === \"1\") {\n        patternValues[i].style.backgroundColor = \"white\";\n        patternValues[i].style.color = \"white\";\n      }\n    }\n  }, [storedPatternValue, corruptionPatternValue]);\n  useEffect(() => {\n    if (storedPattern === \"array1\") {\n      setStoredPatternValue(array1);\n      setPatternValueHolder(array1);\n    } else if (storedPattern === \"array2\") {\n      setStoredPatternValue(array2);\n      setPatternValueHolder(array2);\n    } else if (storedPattern === \"array3\") {\n      setStoredPatternValue(array3);\n      setPatternValueHolder(array3);\n    } else if (storedPattern === \"array4\") {\n      setStoredPatternValue(array4);\n      setPatternValueHolder(array4);\n    } else {\n      setStoredPatternValue(array1);\n      setPatternValueHolder(array1);\n    }\n\n    setCorruptionPatternValue(() =>\n      randomizeArray(patternValueHolder, corruptionPercentage)\n    );\n\n    console.log(patternValueHolder);\n  }, [storedPattern, corruptionPercentage]);\n  useEffect(() => {\n    if (storedPattern === \"array1\") {\n      setCorruptionPatternValue(array1);\n    } else if (storedPattern === \"array2\") {\n      setCorruptionPatternValue(array2);\n    } else if (storedPattern === \"array3\") {\n      setCorruptionPatternValue(array3);\n    } else if (storedPattern === \"array4\") {\n      setCorruptionPatternValue(array4);\n    } else {\n      setCorruptionPatternValue(array1);\n    }\n    setCorruptionPercentage(0);\n  }, [storedPattern]);\n  // useEffect(()=>{\n  // setCorruptionPatternValue(() => randomizeArray(patternValueHolder, corruptionPercentage));\n  // console.log(corruptionPercentage);\n  // }, [corruptionPercentage])\n  const printHandler = () => {\n    console.log(storedPatternValue);\n    console.log(corruptionPercentage);\n    \n  };\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Hopfield Networks</h1>\n      </header>\n      <main className=\"window\">\n        <div className=\"parametersContainer\">\n          <h1>Parameters</h1>\n          <div>\n            <div>\n              <label>Stored patterns</label>\n              <select\n                onChange={(e) => setStoredPattern(e.target.value)}\n                value={storedPattern}\n              >\n                <option value=\"array1\">1</option>\n                <option value=\"array2\">2</option>\n                <option value=\"array3\">3</option>\n                <option value=\"array4\">4</option>\n              </select>\n            </div>\n          </div>\n          <div>\n            <div>\n              <label>Corruption %</label>\n              <select\n                onChange={(e) =>\n                  setCorruptionPercentage(Number(e.target.value))\n                }\n                value={corruptionPercentage}\n              >\n                <option value={\"0\"}>0</option>\n                <option value={\"10\"}>10</option>\n                <option value={\"20\"}>20</option>\n                <option value={\"30\"}>30</option>\n                <option value={\"40\"}>40</option>\n                <option value={\"50\"}>50</option>\n                <option value={\"60\"}>60</option>\n                <option value={\"70\"}>70</option>\n                <option value={\"80\"}>80</option>\n                <option value={\"90\"}>90</option>\n                <option value={\"100\"}>100</option>\n              </select>\n            </div>\n          </div>\n          <div>\n            <div>\n              <label>Iteration delay</label>\n              <select>\n                <option>25</option>\n              </select>\n            </div>\n          </div>\n        </div>\n        <div className=\"patternsContainer\">\n          <h1>Stored pattern(s)</h1>\n          <div className=\"storedPatternsContainer\">\n            {storedPatternValue.map((row, i) => (\n              <div className=\"patternArray\" key={i}>\n                {row.map((item, j) => (\n                  <p key={j}>{item}</p>\n                ))}\n              </div>\n            ))}\n          </div>\n          <button onClick={printHandler}>print</button>\n        </div>\n        <div className=\"corruptedPatternContainer\">\n          <h1>Corrupted pattern</h1>\n          <div className=\"storedPatternsContainer\">\n            {corruptionPatternValue.map((row, i) => (\n              <div className=\"patternArray\" key={i}>\n                {row.map((item, j) => (\n                  <p key={j}>{item}</p>\n                ))}\n              </div>\n            ))}\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}